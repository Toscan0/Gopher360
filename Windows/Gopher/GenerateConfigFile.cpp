#include "GenerateConfigFile.h"

GenerateConfigFile::GenerateConfigFile(std::string file_name)
{
	std::ifstream file;

	printf("%s not found! Building a fresh one... ", file_name.c_str());

	std::ofstream outfile("config.ini");

	outfile << "#	GOPHER DEFAULT CONFIGURATION rev1.0 - Auto generated by Gopher360." << std::endl;
	outfile << "#	If you want a fresh one, just DELETE THIS FILE and re-run Gopher360." << std::endl;
	outfile << "#	Set which controller buttons will activate the configuration events." << std::endl;
	outfile << "#	SET 0 FOR NO FUNCTION." << std::endl;
	outfile << "#	AVAILABLE VALUES AT https://msdn.microsoft.com/en-us/library/windows/desktop/microsoft.directx_sdk.reference.xinput_gamepad(v=vs.85).aspx" << std::endl;
	outfile << "#	TIP: Sum the hex value for double button shortcuts eg. 0x0010(START) 0x0020(BACK) so 0x0030(START+BACK) will trigger the event only when both are pressed." << std::endl;
	outfile << "\n" << std::endl;
	outfile << "CONFIG_MOUSE_LEFT = 0x1000	# Left mouse button" << std::endl;
	outfile << "CONFIG_MOUSE_RIGHT = 0x4000	# Right mouse button" << std::endl;
	outfile << "CONFIG_MOUSE_MIDDLE = 0x0040	# Middle mouse button" << std::endl;
	outfile << "CONFIG_HIDE = 0x8000		# Hides the terminal" << std::endl;
	outfile << "CONFIG_DISABLE = 0x0030		# Disables the Gopher" << std::endl;
	outfile << "CONFIG_DISABLE_VIBRATION = 0x0011 # Disables Gopher Vibrations" << std::endl;
	outfile << "CONFIG_SPEED_CHANGE =  0x0300	# Change speed" << std::endl;
	outfile << "#CONFIG_OSK = 0x0020   # Toggle on-screen keyboard" << std::endl;
	outfile << "\n" << std::endl;
	outfile << "#	KEYBOARD SHORTCUTS ON CONTROLLER BUTTONS" << std::endl;
	outfile << "#	SET 0 FOR NO FUNCTION" << std::endl;
	outfile << "#	AVAILABLE VALUES AT> https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731" << std::endl;
	outfile << "\n" << std::endl;
	outfile << "GAMEPAD_DPAD_UP = 0x26" << std::endl;
	outfile << "GAMEPAD_DPAD_DOWN = 0x28" << std::endl;
	outfile << "GAMEPAD_DPAD_LEFT = 0x25" << std::endl;
	outfile << "GAMEPAD_DPAD_RIGHT = 0x27" << std::endl;
	outfile << "GAMEPAD_START = 0x5B" << std::endl;
	outfile << "GAMEPAD_BACK = 0xA8" << std::endl;
	outfile << "GAMEPAD_LEFT_THUMB = 0" << std::endl;
	outfile << "GAMEPAD_RIGHT_THUMB = 0x71" << std::endl;
	outfile << "GAMEPAD_LEFT_SHOULDER = 0" << std::endl;
	outfile << "GAMEPAD_RIGHT_SHOULDER = 0" << std::endl;
	outfile << "GAMEPAD_A = 0" << std::endl;
	outfile << "GAMEPAD_B = 0x0D" << std::endl;
	outfile << "GAMEPAD_X = 0" << std::endl;
	outfile << "GAMEPAD_Y = 0" << std::endl;
	outfile << "GAMEPAD_TRIGGER_LEFT = 0" << std::endl;
	outfile << "GAMEPAD_TRIGGER_RIGHT = 0" << std::endl;
	outfile << "\n" << std::endl;
	outfile << "# ADVANCED CONFIGURATION SETTINGS" << std::endl;
	outfile << "#  ALLOWED CURSOR SPEEDS, FIRST WILL BE CHOSEN BY DEFAULT.  VALUES > 1.0 WILL BE IGNORED.  NO SPACES." << std::endl;
	outfile << "CURSOR_SPEED = ULTRALOW=0.005,LOW=0.015,MED=0.025,HIGH=0.04" << std::endl;
	outfile << "# WHAT CURSOR SPEED IS LOADED" << std::endl;
	outfile << "CURSOR_SPEED_INDEX = 0" << std::endl;
	outfile << "#  SET ACCELERATION FACTOR FOR NON-LINEAR CURSOR SPEED" << std::endl;
	outfile << "# ACCELERATION_FACTOR = 3" << std::endl;
	outfile << "#  Swaps the function of the thumbsticks. Set to 0 for default behavior or set to 1 to have the mouse movement on the right stick and scrolling on the left stick." << std::endl;
	outfile << "SWAP_THUMBSTICKS = 0" << std::endl;

	outfile.close();


	file.open(file_name.c_str());

	if (!file)
	{
		ConfigFile::ExitWithError("\nERROR! Configuration file " + file_name + " still couldn't be found!\n");
	}
	else
	{
		printf("Success!\nNow using %s.\n", file_name.c_str());
	}
}
